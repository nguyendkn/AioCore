@page "/settings/tenant/list"
@using MediatR
@using AioCore.Read.SettingQueries.TenantQueries
@using AioCore.Domain.SettingAggregate
@layout SettingsLayout

<HeaderComponent Title="Thuê bao" Icon="server">
    <Description>
        <p class="text-sm text-gray-500">Cấu hình thuê bao được đăng ký vào hệ thống</p>
        <p class="text-sm text-gray-500">Các thuê bao sẽ có định danh riêng</p>
    </Description>
    <Action>
        <Button @onclick="@Open" class="flex justify-center items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">
            Thêm mới
        </Button>
    </Action>
</HeaderComponent>
<Content>
    <div class="w-[1024px] mx-auto my-10 bg-white main">
        <!-- This example requires Tailwind CSS v2.0+ -->
        <div class="bg-white shadow overflow-hidden sm:rounded-md">
            <ul role="list" class="divide-y divide-gray-200">
                @if (Tenants != null)
                {
                    foreach (var item in Tenants)
                    {
                        <li>
                            <a href="#" class="block hover:bg-gray-50">
                                <div class="flex items-center px-4 py-4 sm:px-6">
                                    <div class="min-w-0 flex-1 flex items-center">
                                        <div class="flex-shrink-0">
                                            <img class="h-12 w-12 rounded-full" src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80" alt="">
                                        </div>
                                        <div class="min-w-0 flex-1 px-4 md:grid md:grid-cols-2 md:gap-4">
                                            <div>
                                                <p class="text-sm font-medium text-indigo-600 truncate">@item.Title</p>
                                                <p class="mt-2 flex items-center text-sm text-gray-500">
                                                    <!-- Heroicon name: solid/mail -->
                                                    <svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                        <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"/>
                                                        <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"/>
                                                    </svg>
                                                    <span class="truncate">@item.Domain</span>
                                                </p>
                                            </div>
                                            <div class="hidden md:block">
                                                <div>
                                                    <p class="text-sm text-gray-900">
                                                        Ngày tạo
                                                        <time datetime="@item.CreatedAt.ToString("dd/MM/yyyy")">
                                                            @item.CreatedAt.ToString("dd/MM/yyyy")
                                                        </time>
                                                    </p>
                                                    <p class="mt-2 flex items-center text-sm text-gray-500">
                                                        <!-- Heroicon name: solid/check-circle -->
                                                        <svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-green-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
                                                        </svg>
                                                        Cài đặt thành công
                                                    </p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div>
                                        <Dropdown Placement="@Placement.BottomLeft">
                                            <Overlay>
                                                @_overlayMenu
                                            </Overlay>
                                            <ChildContent>
                                                <Button Size="@AntSizeLDSType.Small">...</Button>
                                            </ChildContent>
                                        </Dropdown>
                                    </div>
                                </div>
                            </a>
                        </li>
                    }
                }
            </ul>
        </div>

    </div>
</Content>

<TenantDetail @bind-Visible="@_toggleDetail" Title="@Title"/>

@code {

    private readonly RenderFragment _overlayMenu =
        @<Menu>
            <MenuItem>
                <a href="#" class="text-blue-600 text-xs">
                    <i class="fa-duotone fa-pen-to-square"></i>
                    Chỉnh sửa
                </a>
            </MenuItem>
            <MenuItem>
                <a href="#" class="text-red-600 text-xs">
                    <i class="fa-duotone fa-trash-can mr-1"></i>
                    Xóa
                </a>
            </MenuItem>
        </Menu>;

    private bool _toggleDetail;
        private const string Title = "Thông tin thuê bao";
    private List<SettingTenant>? Tenants { get; set; }

    [Inject]
    public IMediator Mediator { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        await FetchAsync();
        await base.OnInitializedAsync();
    }

    private void Open()
    {
        _toggleDetail = true;
    }

    private async Task FetchAsync()
    {
        var response = await Mediator.Send(new ListTenantQuery(1, 15));
        Tenants = response.Data;
    }

}